### Phonebook Backend API Tests

### Exercise 3.1: Get all persons
GET http://localhost:3001/api/persons

### Exercise 3.2: Get info
GET http://localhost:3001/info

### Exercise 3.3: Get single person
GET http://localhost:3001/api/persons/1

### Exercise 3.3: Get non-existent person (should return 404)
GET http://localhost:3001/api/persons/999

### Exercise 3.4: Delete a person
DELETE http://localhost:3001/api/persons/1

### Exercise 3.5: Add new person
POST http://localhost:3001/api/persons
Content-Type: application/json

{
  "name": "Test Person",
  "number": "123-456-7890"
}

### Exercise 3.6: Add person without name (should return 400)
POST http://localhost:3001/api/persons
Content-Type: application/json

{
  "number": "123-456-7890"
}

### Exercise 3.6: Add person without number (should return 400)
POST http://localhost:3001/api/persons
Content-Type: application/json

{
  "name": "Test Person"
}

### Exercise 3.6: Add person with duplicate name (should return 400)
POST http://localhost:3001/api/persons
Content-Type: application/json

{
  "name": "Arto Hellas",
  "number": "123-456-7890"
}

### Exercise 3.17: Update person's number (PUT request)
PUT http://localhost:3001/api/persons/5c42336b0303b2e44071de4f
Content-Type: application/json

{
  "name": "Arto Hellas",
  "number": "040-999999"
}

### Exercise 3.17: Update non-existent person (should return 404)
PUT http://localhost:3001/api/persons/999999999999999999999999
Content-Type: application/json

{
  "name": "Non Existent",
  "number": "000-000000"
}

### Exercise 3.17: Update person with missing data (should return 400)
PUT http://localhost:3001/api/persons/5c42336b0303b2e44071de4f
Content-Type: application/json

{
  "name": "Arto Hellas"
}
